[
    {
        "heading": "Search Functionality - StackOverflow",
        "tech": "C#, ASP.net",
        "date": "Mar 2024 to Mar 2024",
        "ghlink": "https://github.com/gghati/Search-functionality-StackOverflow",
        "description": [
            "• Implemented the search functionality of StackOverflow in an ASP.NET MVC web application using C#, enhancing user experience and efficiency.",
            "• Developed the frontend using HTML, Bootstrap, and JavaScript to create a visually appealing and responsive interface.",
            "• Implemented AJAX for seamless updating of items without reloading the page, improving overall performance and interactivity."
        ]
    },
    {
        "heading": "Fibonacci Heap",
        "tech": "Data Structures, python",
        "date": "Feb 2024 to Mar 2024",
        "ghlink": "https://github.com/gghati/Fibonacci-Heap",
        "description": [
            "• Developed a Python implementation of Fibonacci Heap, optimizing memory usage and enhancing efficiency.",
            "• Employed object-oriented programming principles for a clear and maintainable codebase, and conducted comprehensive testing to ensure reliability."
        ]
    },
    {
        "heading": "Cuckoo Hashing",
        "tech": "Data Structures, python",
        "date": "Jan 2024 to Feb 2024",
        "ghlink": "https://github.com/gghati/cuckoo-hashing",
        "description": [
            "• Implemented Cuckoo Hashing algorithm, enhancing key-value pair storage with efficient collision handling.",
            "• Designed and optimized Cuckoo Hashing scheme for high-performance data retrieval.",
            "• Conducted comprehensive testing to validate efficiency and scalability, showcasing strong algorithmic proficiency."
        ]
    },
    {
        "heading": "Storage Class Memory Manager",
        "tech": "Kernel Programming, low-level Programming using C, Unix/Linux",
        "date": "Nov 2023 to Dec 2023",
        "ghlink": "http://tinyurl.com/ghatiOSproject3",
        "description": [
            "• Created a robust memory management system featuring an API reminiscent of the C malloc() and free() functions.",
            "• This is done by mapping process virtual memory to file memory for persistence",
            "• Developed chunking logic for memory allocation and deallocation, which utilizes freed-up memory on demand."
        ]
    },
    {
        "heading": "System Performance Monitor",
        "tech": "Operating Systems, Unix/Linux",
        "date": "Nov 2023 to Dec 2023",
        "ghlink": "http://tinyurl.com/ghatiOSproject5",
        "description": [
            "• Developed a real-time system monitoring tool similar to Unix top command in C, utilizing Linux proc files to extract CPU, memory, network, and I/O statistics, displayed through a terminal UI.",
            "• Implemented two distinct categories of performance statistics in C, enhancing system visibility and facilitating efficient resource management."
        ]
    },
    {
        "heading": "Dynamic Thread Scheduler",
        "tech": "Operating Systems, Unix/Linux",
        "date": "Oct 2023 to Nov 2023",
        "ghlink": "http://tinyurl.com/ghatiOSproject2",
        "description": [
            "• Implemented thread scheduling in C, including thread structure creation and dynamic stack memory allocation.",
            "• Created Round Robin thread scheduling using a Circular Linked List and achieved concurrent non-parallel execution by context switching between threads with setjmp() and longjmp() kernel system calls"
        ]
    },
    {
        "heading": "Technology Assisted Review",
        "tech": "Deep Learning (Natural Language Processing) And Website in (Django, ReactJS)",
        "date": "Aug 2021 to May 2022",
        "ghlink": "https://github.com/gghati/veridical/tree/main/PICT-2022-TAR-2.0",
        "description": [
            "• Sponsored and guided by Veritas Technologies LLC.",
            "• Devised an NLP text classification model based on LSTM and Google’s LLM - BERT for auto-matching relevant documents. Used rehearsal techniques for effective training, preventing memory loss issues while training model.",
            "• Improved incremental learning accuracy by 45% by writing a ranking algorithm prioritizing uncertain documents.",
            "• Developed this web application using Django REST APIs in Python and React.js, the backend was dockerized and deployed to AWS EC2 servers ensuring scalable and efficient access to the application."
        ]
    },
    {
        "heading": "Hospital Management System",
        "tech": "Software Development (Java Swing and MySQL)",
        "date": "Dec 2020 to Jan 2021",
        "ghlink": "https://github.com/gghati/Hospital-Management-System",
        "description": [
            "• A desktop application for Hospital management using Java Swing and MySQL database.",
            "• Includes features like managing doctors, staff members and covid patients, creating appointments, sending reports on video calling etc."
        ]
    },
    {
        "heading": "Credenz Website Backend",
        "tech": "Web development (NodeJS, Express.js and MongoDB)",
        "date": "Oct 2020 to Feb 2021",
        "ghlink": "https://github.com/credenz/credenz-website-backend",
        "description": [
            "•  Designed backend APIs using Node.js / Express.js for Credenz’s website (technical fest), These APIs were used by 8 other event apps to get live updates of the technical fest. In total, it was used by over 1800 participants.",
            "• Include features like user registration, booking tickets for technical events, payment gateway, etc. Implemented middleware authentication, OAuth2, JWT, and MongoDB Cloud for streamlined and secure data handling."
        ]
    },
    {
        "heading": "Question Portal",
        "tech": "Web development (Node JS, Express.js and MongoDB)",
        "date": "Jun 2020 to Jul 2020",
        "ghlink": "https://github.com/gghati/Question-Portal",
        "description" : [
            "• Website for accepting the competitive programming questions, which we used in creating the question dataset of the competitive coding events (conducted by PISB)"
        ]
    }, 
    {
        "heading": "National Coding Contest",
        "tech": "Web development (Django REST and MySQL)",
        "date": "Feb 2020 to Mar 2020",
        "ghlink": "https://github.com/CTD-NCC/NCC20",
        "description": [
            "• National Computing Contest (NCC) platform is used by more than 500+ participants in Credenz Tech Days. We created an Online Judge of C, CPP and Python for the contestants to submit the code.",
            "• Implemented sandboxing env to run c, cpp, and python codes in the backend."
        ]
    },
    {
        "heading": "Clash & RC",
        "tech": "Web development (Django and SQLite)",
        "date": "Jul 2019 to Sep 2019",
        "ghlink": "https://github.com/clash-rc-round-2/Clash-Round-2",
        "description" : [
            "• Clash RC is an online Judge platform used by more than 300+ participants in a technical fest (Credenz).",
            "• Contestants can run, test, and submit code in C, CPP, or Python for various coding questions."
        ]
    }
]
